{"version":3,"sources":["../src/with_uploader.js"],"names":["depsMapper","context","composer","onData","uploader","alertsNamespace","onUploadError","onUploadSuccess","Alerts","getUploadCallback","file","callback","handleCallback","props","error","url","upload","send","progressDecimal","progress","Math","round","status","composeWithUploader","C","WithUploader","uniforms","uploadService","Error","directive","Directives","directiveName","metaContext","createUploader","CWithTracker","fileRestrictions","Component","contextTypes","PropTypes","object","displayName"],"mappings":"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","file":"with_uploader.js","sourcesContent":["import { useDeps, composeAll, composeWithTracker } from 'mantra-core';\nimport React from 'react';\nimport _ from 'lodash';\n\nexport const depsMapper = context => ({\n  context: () => context,\n});\n\nexport const composer = (\n  { context, uploader, alertsNamespace = 'upload', onUploadError = _.noop, onUploadSuccess = _.noop }\n  , onData) => {\n  const { Alerts } = context();\n  const getUploadCallback = (file, callback) => {\n    // check if Alerts has support for handleCallback\n    if (Alerts && Alerts.handleCallback) {\n      return Alerts.handleCallback(alertsNamespace, {\n        props: () => ({ file }),\n      },\n        callback,\n      );\n    }\n    // legacy\n    return (error, url) => {\n      if (error) {\n        onUploadError(error);\n      } else {\n        onUploadSuccess({ file, url });\n      }\n      callback(error, url);\n    };\n  };\n  const upload = (file, callback) => {\n    uploader.send(file, getUploadCallback(file, callback));\n  };\n  const progressDecimal = !_.isNaN(uploader.progress()) ? uploader.progress() : 0;\n  const progress = Math.round(progressDecimal * 100);\n  const status = uploader.status();\n  // we use showFileError in FileField to indicate files that were already rejected by the dropzone\n  onData(null, { upload, progress, status });\n};\n\nexport const composeWithUploader = () => (C) => {\n  const WithUploader = class extends React.Component {\n    constructor(props, { uniforms } = {}) {\n      super(props);\n\n      const { uploadService } = props.context();\n      if (!uploadService) {\n        throw new Error('Please provide uploadService in your context');\n      }\n      this.directive = uploadService.Directives[props.directiveName];\n      // metaContext is available on the server when creating a key\n      // it can be a function and will be called with props and the uniforms' context\n      // if embedded on a fileField\n      // see collections/companies for an example\n      const metaContext = _.isFunction(props.metaContext) ?\n        props.metaContext(props, uniforms) :\n        props.metaContext;\n\n      this.uploader = uploadService.createUploader(props.directiveName, metaContext);\n    }\n    render() {\n      const props = this.props;\n\n      const CWithTracker = composeWithTracker(composer)(C);\n      const fileRestrictions = this.directive.fileRestrictions;\n\n      return (\n        <CWithTracker\n          {...props}\n          fileRestrictions={fileRestrictions}\n          uploader={this.uploader}\n        />\n      );\n    }\n  };\n  WithUploader.contextTypes = {\n    uniforms: React.PropTypes.object,\n  };\n\n  WithUploader.displayName = `withUploader(${C.displayName})`;\n\n  return WithUploader;\n};\n\n\nexport default C => composeAll(\n  composeWithUploader(),\n  useDeps(depsMapper),\n)(C);\n"]}