{"version":3,"sources":["../src/get_orientation.js"],"names":[],"mappings":";;;;;;;qBACe,UAAC,IAAI,EAAE,QAAQ,EAAK;;;;;AAKjC,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;AAChC,QAAM,CAAC,MAAM,GAAG,UAAC,CAAC,EAAK;AACrB,QAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC3C,QAAI,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,KAAK,MAAM,EAAE,OAAO,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7D,QAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC;;AAE/B,QAAI,MAAM,GAAG,CAAC,CAAC;AACf,WAAO,MAAM,GAAG,MAAM,EAAE;AACtB,UAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC7C,YAAM,IAAI,CAAC,CAAC;AACZ,UAAI,MAAM,KAAK,MAAM,EAAE;AACrB,YAAI,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE,KAAK,CAAC,KAAK,UAAU,EAAE,OAAO,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3E,YAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE,KAAK,CAAC,KAAK,MAAM,CAAC;AAC7D,cAAM,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC;AAC7C,YAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC5C,cAAM,IAAI,CAAC,CAAC;AACZ,aAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;AAC7B,cAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAI,CAAC,GAAG,EAAE,AAAC,EAAE,MAAM,CAAC,KAAK,MAAM,EAAE;AACxD,mBAAO,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAI,CAAC,GAAG,EAAE,AAAC,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;WAChE;SACF;OACF,MAAM,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA,KAAM,MAAM,EAAE,MAAM,KAC1C,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;KAC9C;AACD,WAAO,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;GACrB,CAAC;AACF,QAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;CAChC","file":"get_orientation.js","sourcesContent":["/** thx http://stackoverflow.com/questions/7584794/accessing-jpeg-exif-rotation-data-in-javascript-on-the-client-side **/\nexport default (file, callback) => {\n  /* global FileReader*/\n  /* eslint no-plusplus: 0*/\n  /* eslint no-cond-assign: 0 */\n  /* eslint no-bitwise: 0*/\n  const reader = new FileReader();\n  reader.onload = (e) => {\n    const view = new DataView(e.target.result);\n    if (view.getUint16(0, false) !== 0xFFD8) return callback(-2);\n    const length = view.byteLength;\n\n    let offset = 2;\n    while (offset < length) {\n      const marker = view.getUint16(offset, false);\n      offset += 2;\n      if (marker === 0xFFE1) {\n        if (view.getUint32(offset += 2, false) !== 0x45786966) return callback(-1);\n        const little = view.getUint16(offset += 6, false) === 0x4949;\n        offset += view.getUint32(offset + 4, little);\n        const tags = view.getUint16(offset, little);\n        offset += 2;\n        for (let i = 0; i < tags; i++) {\n          if (view.getUint16(offset + (i * 12), little) === 0x0112) {\n            return callback(view.getUint16(offset + (i * 12) + 8, little));\n          }\n        }\n      } else if ((marker & 0xFF00) !== 0xFF00) break;\n      else offset += view.getUint16(offset, false);\n    }\n    return callback(-1);\n  };\n  reader.readAsArrayBuffer(file);\n};\n"]}