{"version":3,"sources":["../src/get_orientation.js"],"names":["file","callback","reader","FileReader","onload","e","view","DataView","target","result","getUint16","length","byteLength","offset","marker","getUint32","little","tags","i","readAsArrayBuffer"],"mappings":";;;;;;AAAA;kBACe,UAACA,IAAD,EAAOC,QAAP,EAAoB;AACjC;AACA;AACA;AACA;AACA,MAAMC,SAAS,IAAIC,UAAJ,EAAf;AACAD,SAAOE,MAAP,GAAgB,UAACC,CAAD,EAAO;AACrB,QAAMC,OAAO,IAAIC,QAAJ,CAAaF,EAAEG,MAAF,CAASC,MAAtB,CAAb;AACA,QAAIH,KAAKI,SAAL,CAAe,CAAf,EAAkB,KAAlB,MAA6B,MAAjC,EAAyC,OAAOT,SAAS,CAAC,CAAV,CAAP;AACzC,QAAMU,SAASL,KAAKM,UAApB;;AAEA,QAAIC,SAAS,CAAb;AACA,WAAOA,SAASF,MAAhB,EAAwB;AACtB,UAAMG,SAASR,KAAKI,SAAL,CAAeG,MAAf,EAAuB,KAAvB,CAAf;AACAA,gBAAU,CAAV;AACA,UAAIC,WAAW,MAAf,EAAuB;AACrB,YAAIR,KAAKS,SAAL,CAAeF,UAAU,CAAzB,EAA4B,KAA5B,MAAuC,UAA3C,EAAuD,OAAOZ,SAAS,CAAC,CAAV,CAAP;AACvD,YAAMe,SAASV,KAAKI,SAAL,CAAeG,UAAU,CAAzB,EAA4B,KAA5B,MAAuC,MAAtD;AACAA,kBAAUP,KAAKS,SAAL,CAAeF,SAAS,CAAxB,EAA2BG,MAA3B,CAAV;AACA,YAAMC,OAAOX,KAAKI,SAAL,CAAeG,MAAf,EAAuBG,MAAvB,CAAb;AACAH,kBAAU,CAAV;AACA,aAAK,IAAIK,IAAI,CAAb,EAAgBA,IAAID,IAApB,EAA0BC,GAA1B,EAA+B;AAC7B,cAAIZ,KAAKI,SAAL,CAAeG,SAAUK,IAAI,EAA7B,EAAkCF,MAAlC,MAA8C,MAAlD,EAA0D;AACxD,mBAAOf,SAASK,KAAKI,SAAL,CAAeG,SAAUK,IAAI,EAAd,GAAoB,CAAnC,EAAsCF,MAAtC,CAAT,CAAP;AACD;AACF;AACF,OAXD,MAWO,IAAI,CAACF,SAAS,MAAV,MAAsB,MAA1B,EAAkC,MAAlC,KACFD,UAAUP,KAAKI,SAAL,CAAeG,MAAf,EAAuB,KAAvB,CAAV;AACN;AACD,WAAOZ,SAAS,CAAC,CAAV,CAAP;AACD,GAxBD;AAyBAC,SAAOiB,iBAAP,CAAyBnB,IAAzB;AACD,C","file":"get_orientation.js","sourcesContent":["/** thx http://stackoverflow.com/questions/7584794/accessing-jpeg-exif-rotation-data-in-javascript-on-the-client-side **/\nexport default (file, callback) => {\n  /* global FileReader*/\n  /* eslint no-plusplus: 0*/\n  /* eslint no-cond-assign: 0 */\n  /* eslint no-bitwise: 0*/\n  const reader = new FileReader();\n  reader.onload = (e) => {\n    const view = new DataView(e.target.result);\n    if (view.getUint16(0, false) !== 0xFFD8) return callback(-2);\n    const length = view.byteLength;\n\n    let offset = 2;\n    while (offset < length) {\n      const marker = view.getUint16(offset, false);\n      offset += 2;\n      if (marker === 0xFFE1) {\n        if (view.getUint32(offset += 2, false) !== 0x45786966) return callback(-1);\n        const little = view.getUint16(offset += 6, false) === 0x4949;\n        offset += view.getUint32(offset + 4, little);\n        const tags = view.getUint16(offset, little);\n        offset += 2;\n        for (let i = 0; i < tags; i++) {\n          if (view.getUint16(offset + (i * 12), little) === 0x0112) {\n            return callback(view.getUint16(offset + (i * 12) + 8, little));\n          }\n        }\n      } else if ((marker & 0xFF00) !== 0xFF00) break;\n      else offset += view.getUint16(offset, false);\n    }\n    return callback(-1);\n  };\n  reader.readAsArrayBuffer(file);\n};\n"]}