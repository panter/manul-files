{"version":3,"sources":["../src/upload_client.js"],"names":[],"mappings":"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","file":"upload_client.js","sourcesContent":["import _ from 'lodash';\nimport initUploadDirectives from './init_upload_directives';\nimport resize from './resize';\n\nconst RESIZABLE_MIME_TYPES = ['image/jpeg', 'image/png', 'image/gif'];\n\nexport default class UploadClientService {\n\n  constructor({ Slingshot, Directives }, options = {\n    resizeQuality: 0.6,\n    onAfterUpload: _.noop,\n  }) {\n    this.Slingshot = Slingshot;\n    this.Directives = Directives;\n    this.options = options;\n    initUploadDirectives({ Slingshot, Directives });\n  }\n\n  shouldResize(directiveName, { size, type }) {\n    const { fileRestrictions } = this.Directives[directiveName];\n    if (!fileRestrictions.maxSize || fileRestrictions.maxSize >= size) {\n      return false;\n    }\n    if (_.includes(RESIZABLE_MIME_TYPES, type)) {\n      return true;\n    }\n    return false;\n  }\n\n  getResizeOptions(directiveName) {\n    const { fileRestrictions } = this.Directives[directiveName];\n    return {\n      maxDimension: fileRestrictions.resizeToMaxDimension,\n      quality: this.options.resizeQuality,\n    };\n  }\n\n  createUploader(directiveName, metaContext) {\n    const uploader = new this.Slingshot.Upload(directiveName, metaContext);\n\n    // can't extend properly with classes :-(\n    const superSend = uploader.send;\n    const upload = (file, callback) => {\n      const callbackWithTracking = (error, url) => {\n        if (_.isFunction(this.options.onAfterUpload)) {\n          this.options.onAfterUpload(error, { url, file, directiveName });\n        }\n        callback(error, url);\n      };\n\n      superSend(file, callbackWithTracking);\n    };\n\n    uploader.send = (file, callback) => {\n      // resize if too large\n      if (this.shouldResize(directiveName, file)) {\n        const resizeOptions = this.getResizeOptions(directiveName);\n        resize(file, resizeOptions, (error, fileResized) => {\n          if (!error) {\n            upload(fileResized, callback);\n          } else {\n            callback(error);\n          }\n        });\n      } else {\n        upload(file, callback);\n      }\n    };\n    return uploader;\n  }\n}\n"]}