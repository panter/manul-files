{"version":3,"sources":["../src/resize.js"],"names":[],"mappings":";;;;;;;;+BAE2B,mBAAmB;;;;sBAC3B,UAAU;;;;;AAE7B,IAAI,MAAM,IAAI,MAAM,CAAC,QAAQ,EAAE;AAC7B,SAAO,CAAC,wBAAwB,CAAC,CAAC;CACnC;;qBAEc,UAAC,IAAI,MAA8C,QAAQ,EAAK;mEAAjB,EAAE;;+BAAxC,YAAY;MAAZ,YAAY,qCAAG,GAAG;0BAAE,OAAO;MAAP,OAAO,gCAAG,GAAG;;;;AAGvD,oCAAe,IAAI,EAAE,UAAC,WAAW,EAAK;;;AAGpC,QAAM,MAAM,GAAG,IAAI,MAAM,CAAC,UAAU,EAAE,CAAC;AACvC,UAAM,CAAC,MAAM,GAAG,UAAC,WAAW,EAAK;AAC/B,UAAM,KAAK,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,CAAC;AACjC,WAAK,CAAC,MAAM,GAAG,YAAM;;AAEnB,YAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AACvD,YAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;AACxB,YAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;;AAE1B,YAAI,KAAK,GAAG,MAAM,EAAE;AAClB,cAAI,KAAK,GAAG,YAAY,EAAE;AACxB,kBAAM,IAAI,YAAY,GAAG,KAAK,CAAC;AAC/B,iBAAK,GAAG,YAAY,CAAC;WACtB;SACF,MAAM,IAAI,MAAM,GAAG,YAAY,EAAE;AAChC,eAAK,IAAI,YAAY,GAAG,MAAM,CAAC;AAC/B,gBAAM,GAAG,YAAY,CAAC;SACvB;AACD,cAAM,CAAC,KAAK,GAAG,KAAK,CAAC;AACrB,cAAM,CAAC,MAAM,GAAG,MAAM,CAAC;AACvB,iCAAO,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;AAC3C,cAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;;AAE9D,cAAM,CAAC,MAAM,CAAC,UAAC,IAAI,EAAK;AACtB,kBAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SACtB,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;OAC3B,CAAC;AACF,WAAK,CAAC,GAAG,GAAG,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC;KACvC,CAAC;AACF,UAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;GAC5B,CAAC,CAAC;CACJ","file":"resize.js","sourcesContent":["\n\nimport getOrientation from './get_orientation';\nimport rotate from './rotate';\n/* global Meteor*/\nif (Meteor && Meteor.isClient) {\n  require('blueimp-canvas-to-blob'); // polyfill\n}\n\nexport default (file, { maxDimension = 640, quality = 0.6 } = {}, onResult) => {\n  // get orientation first\n\n  getOrientation(file, (orientation) => {\n    // thx http://stackoverflow.com/questions/23945494/use-html5-to-resize-an-image-before-upload\n    // Load the image\n    const reader = new global.FileReader();\n    reader.onload = (readerEvent) => {\n      const image = new global.Image();\n      image.onload = () => {\n                  // Resize the image\n        const canvas = global.document.createElement('canvas');\n        let width = image.width;\n        let height = image.height;\n\n        if (width > height) {\n          if (width > maxDimension) {\n            height *= maxDimension / width;\n            width = maxDimension;\n          }\n        } else if (height > maxDimension) {\n          width *= maxDimension / height;\n          height = maxDimension;\n        }\n        canvas.width = width;\n        canvas.height = height;\n        rotate(canvas, width, height, orientation);\n        canvas.getContext('2d').drawImage(image, 0, 0, width, height);\n\n        canvas.toBlob((blob) => {\n          onResult(null, blob);\n        }, 'image/jpeg', quality);\n      };\n      image.src = readerEvent.target.result;\n    };\n    reader.readAsDataURL(file);\n  });\n};\n"]}